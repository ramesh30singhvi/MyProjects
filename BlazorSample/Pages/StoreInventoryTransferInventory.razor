@page "/store/transfer-inventory"
@layout AuthorizedLayout
@using CellarPassAppAdmin.Shared.Services
@using CellarPassAppAdmin.Client.ViewModels
@using CellarPassAppAdmin.Shared.Enums
@using CellarPassAppAdmin.Shared.Models
@using CellarPassAppAdmin.Shared.Models.RequestModel
@using CellarPassAppAdmin.Shared.Models.ViewModel
@using Microsoft.AspNetCore.Components.Web.Extensions.Head
@inject ToastService toastService
@inject AuthenticationStateProvider _authenticationStateProvider
@inject ICellarPassAuthenticationStateProvider _cellarPassAuthenticationStateProvider
@attribute [Authorize]

<Title Value="@title"></Title>
<SfSpinner @bind-Visible="isLoading"></SfSpinner>
<div class="card shadow-none border">
    <div class="card-header border-bottom">
        <div class="row justify-content-between align-items-center">
            <div class="col-md">
                <h5 class="mb-3 mb-md-0"><a href="/store/inventory" class="btn btn-falcon-default btn-sm px-2 me-3" title="Back"><span class="far fa-arrow-left me-1"></span></a><span class="far fa-store me-2"></span>Transfer Inventory</h5>
            </div>
        </div>
    </div>
    <div class="card-body p-0">
        <div class="px-2 mx-2 ">
            <div class="row my-3">
                <div class="col-12 col-md-12">
                    <label class="form-label" for="inputCollectionName">Search</label>
                    <div class="row">
                        <div class="col-12 col-md-4">
                            <div class="input-group">
                                <span class="input-group-text bg-white" id="inputGroupSearch"><span class="far fa-search"></span></span>
                                <input type="text" class="form-control" placeholder="Search Products" aria-label="Search Products" aria-describedby="inputGroupSearch">
                            </div>
                        </div>
                        <div class="col-12 col-md-6"></div>
                        <div class="col-12 col-md-2">
                            <a class="btn btn-sm btn-primary float-end" href="/store/transfer-inventory-request">New Transfer</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="min-vh-75 sf-grid">
            <SfGrid DataSource="@inventory" AllowPaging="true" Width="100%">
                <GridFilterSettings Mode="FilterBarMode.Immediate"></GridFilterSettings>
                <GridPageSettings PageSize="50"></GridPageSettings>
                <GridTemplates>
                    <EmptyRecordTemplate>
                        @if (!isLoading && inventory.Count <= 0)
                        {
                            <div class=" min-vh-75 font-weight-black fs-8 text-center my-4">
                                <h6><span class="fa-regular fa-exclamation-triangle me-2"></span>No Inventory Available</h6>
                                <button type="button" class="btn btn-outline-primary">Get Started</button>
                            </div>
                        }
                    </EmptyRecordTemplate>
                </GridTemplates>
                <GridColumns>
                    <GridColumn HeaderText="Product Name" TextAlign="TextAlign.Left" FilterSettings="@(new FilterSettings{ Operator = Syncfusion.Blazor.Operator.Contains })" Width="150px">
                        <Template>
                            @{
                                var productName = (context as InventoryModel).ProductName;
                                <a href="javascript:void();">@($"{productName}")</a>
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Field=@nameof(InventoryModel.Sku) HeaderText="Sku" TextAlign="TextAlign.Center" FilterSettings="@(new FilterSettings{ Operator = Syncfusion.Blazor.Operator.Contains })" Width="100px" />
                    <GridColumn Field=@nameof(InventoryModel.TransferFrom) HeaderText="Transfer From" TextAlign="TextAlign.Center" FilterSettings="@(new FilterSettings{ Operator = Syncfusion.Blazor.Operator.Contains })" Width="100px" />
                    <GridColumn Field=@nameof(InventoryModel.TransferTo) HeaderText="Transfer To" TextAlign="TextAlign.Center" FilterSettings="@(new FilterSettings{ Operator = Syncfusion.Blazor.Operator.Contains })" Width="100px" />
                    <GridColumn Field=@nameof(InventoryModel.Requested) HeaderText="Requested" TextAlign="TextAlign.Center" FilterSettings="@(new FilterSettings{ Operator = Syncfusion.Blazor.Operator.Contains })" Width="100px" />
                    <GridColumn Field=@nameof(InventoryModel.Received) HeaderText="Received" TextAlign="TextAlign.Center" FilterSettings="@(new FilterSettings{ Operator = Syncfusion.Blazor.Operator.Contains })" Width="100px" />
                    <GridColumn Field=@nameof(InventoryModel.Status) HeaderText="Status" TextAlign="TextAlign.Center" FilterSettings="@(new FilterSettings{ Operator = Syncfusion.Blazor.Operator.Contains })" Width="100px" />
                    <GridColumn Field=@nameof(InventoryModel.Arrival) HeaderText="Arrival" TextAlign="TextAlign.Center" FilterSettings="@(new FilterSettings{ Operator = Syncfusion.Blazor.Operator.Contains })" Width="100px" />
                    <GridColumn HeaderText="" Width="50px">
                        <Template>
                            @{
                                <button class="btn btn-link text-600 btn-sm dropdown-toggle btn-reveal float-end" type="button" id="dropdown0" data-bs-toggle="dropdown" data-boundary="window" aria-haspopup="true" aria-expanded="false"><span class="fas fa-ellipsis-h fs--1"></span></button>
                                <div class="dropdown-menu dropdown-menu-end border py-2" aria-labelledby="dropdown0">
                                    <a class="dropdown-item" href="javascript:void();">Cancel Transfer</a>
                                    <a class="dropdown-item" href="javascript:void();">Complete Transfer</a>
                                </div>
                            }
                        </Template>
                    </GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
    <div class="card-footer">
    </div>
</div>

@code
{
    private string title = "Transfer Inventory | Synergy Admin Panel";
    private Boolean isLoading = false;
    private class InventoryModel
    {
        public string ProductName { get; set; }
        public string Sku { get; set; }
        public string TransferFrom { get; set; }
        public string TransferTo { get; set; }
        public string Requested { get; set; }
        public string Received { get; set; }
        public string Status { get; set; }
        public string Arrival { get; set; }
    }
    private List<InventoryModel> inventory = new List<InventoryModel>() {
        new InventoryModel(){ ProductName= "2018 Autumn Sky Pinot Nair", Sku= "ABC125425", TransferFrom= "[[LOCATION1]]", TransferTo= "[[LOCATION2]]", Requested="12", Received="12", Status="Complete", Arrival="10/22/2021" },
        new InventoryModel(){ ProductName= "2019 Autumn Sky Pinot Nair", Sku= "1243125", TransferFrom= "[[LOCATION1]]", TransferTo= "[[LOCATION2]]", Requested="12", Received="12", Status="In Process", Arrival="10/22/2021" },
        new InventoryModel(){ ProductName= "2020 Autumn Sky Pinot Nair", Sku= "123774", TransferFrom= "[[LOCATION1]]", TransferTo= "[[LOCATION2]]", Requested="12", Received="12", Status="Complete", Arrival="10/22/2021" },
        new InventoryModel(){ ProductName= "2020 Butter Toast", Sku= "2345779", TransferFrom= "[[LOCATION1]]", TransferTo= "[[LOCATION2]]", Requested="12", Received="12", Status="In Process", Arrival="10/22/2021" },
        new InventoryModel(){ ProductName= "2020 Butter Toast 1.5L", Sku= "95685", TransferFrom= "[[LOCATION1]]", TransferTo= "[[LOCATION2]]", Requested="12", Received="12", Status="Complete", Arrival="10/22/2021" },
    };
}
